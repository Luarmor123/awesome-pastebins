local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/turtle"))()

local OwO = library:Window("Quick tools 1.1")

OwO:Button("FLY", function()loadstring("\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\40\39\104\116\116\112\115\58\47\47\103\105\115\116\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\109\101\111\122\111\110\101\89\84\47\98\102\48\51\55\100\102\102\57\102\48\97\55\48\48\49\55\51\48\52\100\100\100\54\55\102\100\99\100\51\55\48\47\114\97\119\47\101\49\52\101\55\52\102\52\50\53\98\48\54\48\100\102\53\50\51\51\52\51\99\102\51\48\98\55\56\55\48\55\52\101\98\51\99\53\100\50\47\97\114\99\101\117\115\37\50\53\50\48\120\37\50\53\50\48\102\108\121\37\50\53\50\48\50\37\50\53\50\48\111\98\102\108\117\99\97\116\111\114\39\41\44\116\114\117\101\41\41\40\41\10\10")()
   print("pressed button")
end)

OwO:Toggle("Infinite jumping", false, function(bool)local infjmp = true
game:GetService("UserInputService").jumpRequest:Connect(function(bool)
    if infjmp then
        game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass"Humanoid":ChangeState("Jumping")
    end
end)
    print(bool) -- bool is true or false depending on the state of the toggle
end)


OwO:Slider("Jumping power",0,150,20, function(s) -- 150 (MaxValue) | 0 (MinValue) 
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
   print()
end)

OwO:Slider("Type speed",0,500,20, function(s) -- 500 (MaxValue) | 0 (MinValue)
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
   print()
end)


OwO:Label("ESP Playerüëá ", Color3.fromRGB(0, 0, 255))
OwO:Toggle("Line & Skelton ", false, function(bool)--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
getgenv().EspSettings = {
	TeamCheck = false,
	ToggleKey = "RightAlt",
	RefreshRate = 10, -- how fast the esp updates (milliseconds)
	MaximumDistance = 500, -- only renders players within this distance
	FaceCamera = false, -- Makes esp appear 2D
	AlignPoints = false, -- Improves 2D effect; only works while FaceCamera is enabled
	-- AlignPoints: This may cause esp to have abnormal behavior when looking from certain angles
	MouseVisibility = {
		Enabled = true, -- makes any drawing objects transparent when they are near your mouse
		Radius = 60,
		Transparency = 0.3,
		Method = "Hover", -- "Radius" or "Hover" | Hover is newest method and is a lot more accurate than Radius
		HoverRadius = 50,
		Selected = { -- set any of these to false to ignore them
			Boxes = true,
			Tracers = true,
			Names = true,
			Skeletons = true,
			HealthBars = true,
			HeadDots = true,
			LookTracers = false 
		}
	},
	Highlights = {
		Enabled = false,
		Players = {}, -- put player usernames into this table to 'highlight' them
		Transparency = 1,
		Color = Color3.fromRGB(255, 150, 0),
		AlwaysOnTop = true
	},
	NPC = {
		Color = Color3.fromRGB(150,150,150),
		Transparency = 1,
		RainbowColor = false,
		Overrides = {
			Boxes = true,
			Tracers = true,
			Names = true,
			Skeletons = true,
			HealthBars = true,
			HeadDots = true,
			LookTracers = true
		}
	},
	Boxes = {
		Enabled = false,
		Transparency = 1,
		Color = Color3.fromRGB(255,255,255),
		UseTeamColor = true,
		RainbowColor = false,
		Outline = true,
		OutlineColor = Color3.fromRGB(0,0,0),
		OutlineThickness = 1,
		Thickness = 1
	},
	Tracers = {
		Enabled = true,
		Transparency = 1,
		Color = Color3.fromRGB(255,255,255),
		UseTeamColor = true,
		RainbowColor = true,
		Outline = true,
		OutlineColor = Color3.fromRGB(0,0,0),
		OutlineThickness = 1,
		Origin = "Top", -- "Top" or "Center" or "Bottom" or "Mouse"
		Thickness = 1
	},
	Names = {
		Enabled = false,
		Transparency = 1,
		Color = Color3.fromRGB(255,255,255),
		UseTeamColor = true,
		RainbowColor = false,
		Outline = true,
		OutlineColor = Color3.fromRGB(0,0,0),
		Font = Drawing.Fonts.UI, -- UI or System or Plex or Monospace
		Size = 18,
		ShowDistance = false,
		ShowHealth = true,
		UseDisplayName = false,
		DistanceDataType = "m", -- what it says after the distance (ex. 100m)
		HealthDataType = "Percentage" -- "Percentage" or "Value"
	},
	Skeletons = {
		Enabled = true,
		Transparency = 1,
		Color = Color3.fromRGB(255,255,255),
		UseTeamColor = true,
		RainbowColor = false,
		Outline = true,
		OutlineColor = Color3.fromRGB(0,0,0),
		OutlineThickness = 1,
		Thickness = 1
	},
	HealthBars = {
		Enabled = false,
		Transparency = 1,
		Color = Color3.fromRGB(0,255,0),
		UseTeamColor = true,
		RainbowColor = false,
		Outline = true,
		OutlineColor = Color3.fromRGB(0,0,0),
		OutlineThickness = 1,
		Origin = "None", -- "None" or "Left" or "Right"
		OutlineBarOnly = true
	},
	HeadDots = {
		Enabled = false,
		Transparency = 1,
		Color = Color3.fromRGB(255,255,255),
		UseTeamColor = true,
		RainbowColor = false,
		Outline = true,
		OutlineColor = Color3.fromRGB(0,0,0),
		OutlineThickness = 1,
		Thickness = 1,
		Filled = false,
		Scale = 1
	},
	LookTracers = {
		Enabled = false,
		Transparency = 1,
		Color = Color3.fromRGB(255,255,255),
		UseTeamColor = true,
		RainbowColor = false,
		Outline = true,
		OutlineColor = Color3.fromRGB(0,0,0),
		OutlineThickness = 1,
		Thickness = 1,
		Length = 5
	}
}
loadstring(game:HttpGet("https://raw.githubusercontent.com/Dragon5819/Main/main/esp", "UniversalEsp"))()
    print(bool) -- bool is true or false depending on the state of the toggle
end)
OwO:Toggle("BOX", false, function(bool)--// Universal Box ESP (Works on Arsenal and other games)

-- settings
local settings = {
   defaultcolor = Color3.fromRGB(255,0,0),
   teamcheck = false,
   teamcolor = true
};

-- services
local runService = game:GetService("RunService");
local players = game:GetService("Players");

-- variables
local localPlayer = players.LocalPlayer;
local camera = workspace.CurrentCamera;

-- functions
local newVector2, newColor3, newDrawing = Vector2.new, Color3.new, Drawing.new;
local tan, rad = math.tan, math.rad;
local round = function(...) local a = {}; for i,v in next, table.pack(...) do a[i] = math.round(v); end return unpack(a); end;
local wtvp = function(...) local a, b = camera.WorldToViewportPoint(camera, ...) return newVector2(a.X, a.Y), b, a.Z end;

local espCache = {};
local function createEsp(player)
   local drawings = {};
   
   drawings.box = newDrawing("Square");
   drawings.box.Thickness = 1;
   drawings.box.Filled = false;
   drawings.box.Color = settings.defaultcolor;
   drawings.box.Visible = false;
   drawings.box.ZIndex = 2;

   drawings.boxoutline = newDrawing("Square");
   drawings.boxoutline.Thickness = 3;
   drawings.boxoutline.Filled = false;
   drawings.boxoutline.Color = newColor3();
   drawings.boxoutline.Visible = false;
   drawings.boxoutline.ZIndex = 1;

   espCache[player] = drawings;
end

local function removeEsp(player)
   if rawget(espCache, player) then
       for _, drawing in next, espCache[player] do
           drawing:Remove();
       end
       espCache[player] = nil;
   end
end

local function updateEsp(player, esp)
   local character = player and player.Character;
   if character then
       local cframe = character:GetModelCFrame();
       local position, visible, depth = wtvp(cframe.Position);
       esp.box.Visible = visible;
       esp.boxoutline.Visible = visible;

       if cframe and visible then
           local scaleFactor = 1 / (depth * tan(rad(camera.FieldOfView / 2)) * 2) * 1000;
           local width, height = round(4 * scaleFactor, 5 * scaleFactor);
           local x, y = round(position.X, position.Y);

           esp.box.Size = newVector2(width, height);
           esp.box.Position = newVector2(round(x - width / 2, y - height / 2));
           esp.box.Color = settings.teamcolor and player.TeamColor.Color or settings.defaultcolor;

           esp.boxoutline.Size = esp.box.Size;
           esp.boxoutline.Position = esp.box.Position;
       end
   else
       esp.box.Visible = false;
       esp.boxoutline.Visible = false;
   end
end

-- main
for _, player in next, players:GetPlayers() do
   if player ~= localPlayer then
       createEsp(player);
   end
end

players.PlayerAdded:Connect(function(player)
   createEsp(player);
end);

players.PlayerRemoving:Connect(function(player)
   removeEsp(player);
end)

runService:BindToRenderStep("esp", Enum.RenderPriority.Camera.Value, function()
   for player, drawings in next, espCache do
       if settings.teamcheck and player.Team == localPlayer.Team then
           continue;
       end

       if drawings and player ~= localPlayer then
           updateEsp(player, drawings);
       end
   end
end)
    print(bool) -- bool is true or false depending on the state of the toggle
end)
OwO:Label("by Youssef TRT", Color3.fromRGB(255, 2, 2))
OwO:Label("ÿµŸÜÿπ ŸäŸÄÔÆØŸàÿ≥ŸÄŸÅ", Color3.fromRGB(255, 2, 2))
